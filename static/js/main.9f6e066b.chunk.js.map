{"version":3,"sources":["components/RecipeDetails.js","components/Recipe.js","components/Alert.js","App.js","index.js"],"names":["RecipeDetails","ingredients","map","ingredient","className","text","weight","toFixed","Math","floor","random","Recipe","recipe","useState","show","setShow","clicked","setClicked","label","image","url","style","color","src","alt","href","target","onClick","Alert","alert","App","query","setQuery","recipes","setRecipes","setAlert","getData","a","Axios","get","result","data","more","hits","onSubmit","e","preventDefault","type","placeholder","onChange","value","class","calories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAqBeA,MAjBf,YAGI,OAHkC,EAAdC,YAIJC,KAAI,SAAAC,GACZ,OAAQ,qBAAIC,UAAU,kBAAd,UACJ,6BACKD,EAAWE,OAEhB,0CACYF,EAAWG,OAAOC,QAAQ,GADtC,YAJmE,IAA1BC,KAAKC,MAAMD,KAAKE,aCkB1DC,MAxBf,YAA2B,IAAVC,EAAS,EAATA,OAEb,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEA,EAAyCL,EAAOA,OAAzCM,EAAP,EAAOA,MAAOC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,IAAKnB,EAA1B,EAA0BA,YAQ1B,OACI,sBAAKG,UAAU,YAAf,UACG,oBAAIiB,MAAO,CAACC,MAAO,SAAnB,SAA8BJ,IAC9B,qBAAKd,UAAU,aAAYmB,IAAKJ,EAAOK,IAAKN,IAC5C,mBAAGd,UAAU,gBAAgBqB,KAAML,EAAKM,OAAO,SAA/C,uBACD,wBAAQtB,UAAYY,EAA8B,0BAApB,kBAA+CW,QAVlE,WACbZ,GAASD,GACTG,GAAYD,IAQV,yBACCF,GAAQ,cAAC,EAAD,CAAeb,YAAeA,QCXlC2B,MATf,YAAyB,IAATC,EAAQ,EAARA,MACZ,OACI,8BACI,oBAAIzB,UAAU,iBAAd,SAAgCyB,OCqD7BC,MAnDf,WACE,MAA0BjB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KACA,EAA8BnB,mBAAS,IAAvC,mBAAOoB,EAAP,KAAgBC,EAAhB,KACA,EAA0BrB,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcM,EAAd,KAIIf,EAAG,0CAAsCW,EAAtC,mBAFM,WAEN,oBADO,oCAGVK,EAAO,uCAAG,4BAAAC,EAAA,yDAED,KAATN,EAFU,iCAGOO,IAAMC,IAAInB,GAHjB,WAGRoB,EAHQ,QAIFC,KAAKC,KAJH,yCAKLP,EAAS,2BALJ,OAOdD,EAAWM,EAAOC,KAAKE,MACvBR,EAAS,IACTH,EAAS,IATK,wBAWZG,EAAS,wBAXG,4CAAH,qDA0BX,OACE,gCACC,oBAAI/B,UAAU,iBAAd,+BACA,uBAAOA,UAAU,cAAewC,SATpB,SAACC,GAChBA,EAAEC,iBACFV,KAOG,UACW,KAATP,GAAe,cAAC,EAAD,CAAOA,MAAOA,IAC9B,sBAAKzB,UAAU,oBAAf,UACC,uBAAOA,UAAU,eAAe2C,KAAK,OAAOC,YAAY,sBAAsBC,SAhBtE,SAACJ,GAChBb,EAASa,EAAEnB,OAAOwB,QAeuFA,MAAOnB,IACzG,wBAAQ3B,UAAU,aAAa2C,KAAK,SAApC,SAA6C,mBAAGI,MAAM,yBAIzD,qBAAK/C,UAAU,aAAf,SAA6B6B,IAAU,IAAMA,EAAQ/B,KAAI,SAAAU,GAAM,OAAE,cAAC,EAAD,CAAQA,OAAQA,GAAaA,EAAOwC,mBCjDzGC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9f6e066b.chunk.js","sourcesContent":["import React from 'react'\r\nimport Recipe from './Recipe'\r\n\r\n\r\nfunction RecipeDetails({ingredients}) {\r\n    \r\n\r\n    return ( \r\n        ingredients.map(ingredient=>{\r\n            return (<ul className=\"ingredient-list\" key={Math.floor(Math.random) * 10000}>\r\n                <li>\r\n                    {ingredient.text}\r\n                </li>\r\n                <li>\r\n                   Weight: {ingredient.weight.toFixed(2)} gr.\r\n                </li>\r\n            </ul>)\r\n        })\r\n    )\r\n}\r\n\r\nexport default RecipeDetails\r\n","import React,{useState} from 'react'\r\nimport RecipeDetails from \"./RecipeDetails\"\r\n\r\nfunction Recipe({recipe}) {\r\n\r\n    const [show, setShow] = useState(false)\r\n    const [clicked, setClicked] = useState(false)\r\n\r\n    const {label, image, url, ingredients} = recipe.recipe\r\n\r\n\r\n    const showMore = ()=>{\r\n        setShow(!show)\r\n        setClicked(!clicked)\r\n    }\r\n\r\n    return (\r\n        <div className=\"menu-card\">\r\n           <h2 style={{color: \"black\"}}>{label}</h2>\r\n           <img className='recipe-img'src={image} alt={label}/>\r\n           <a className=\"read-more-btn\" href={url} target=\"_blank\">Read more</a>\r\n          <button className={!clicked ? \"ingredients-btn\" : \"ingredients-btn clicked\"} onClick={showMore}>Ingredients</button>\r\n          {show && <RecipeDetails ingredients = {ingredients}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe\r\n","import React from 'react'\r\n\r\nfunction Alert({alert}) {\r\n    return (\r\n        <div>\r\n            <h2 className=\"heading--white\">{alert}</h2>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React,{useState} from 'react'\nimport \"./App.css\"\nimport Axios from \"axios\"\nimport Recipe from \"./components/Recipe\" \nimport Alert from \"./components/Alert\"\n\n\nfunction App() {\n  const [query, setQuery] = useState(\"\")\n  const [recipes, setRecipes] = useState([])\n  const [alert, setAlert] = useState(\"\")\n\nconst APP_ID = \"94c2df4a\"\nconst APP_KEY = \"a9a9fb1171322c71310aef4be8a2eeb7\"\nconst url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n\nconst getData = async ()=> {\n\n  if (query !==\"\"){\n  const result = await Axios.get(url)\n  if (!result.data.more){\n    return setAlert(\"No food with such name\")\n  }\n  setRecipes(result.data.hits)\n  setAlert(\"\")\n  setQuery(\"\")\n  }else {\n    setAlert(\"Please fill the form\")\n  }\n\n}\n\nconst onChange=(e)=>{\nsetQuery(e.target.value)\n}\n\nconst onSubmit = (e)=>{\n  e.preventDefault()\n  getData()\n\n}\n\n  return (\n    <div>\n     <h1 className=\"heading--white\">Search for recipe</h1>\n     <form  className=\"search-form\"  onSubmit={onSubmit}>\n      {alert !==\"\" && <Alert alert={alert} />} \n      <div className=\"input-fields-wrap\">\n       <input className=\"search-input\" type=\"text\" placeholder=\"Search for recepies\" onChange={onChange} value={query}/>\n       <button className=\"search-btn\" type=\"submit\"><i class=\"fa fa-search\"></i></button>\n       </div>\n     </form>\n\n    <div className=\"foods-list\">{recipes!==[] && recipes.map(recipe=><Recipe recipe={recipe} key={recipe.calories}/>)}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}